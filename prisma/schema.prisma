// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                       String    @id @default(auto()) @map("_id") @db.ObjectId
  username                 String    @unique
  email                    String    @unique
  password                 String
  contactno                String
  profilePicture           String?
  dateOfBirth              DateTime?
  role                     Role      @default(USER)
  preferences              Json
  isActive                 Boolean   @default(true)
  isEmailVerified          Boolean   @default(false)
  twoFactorEnabled         Boolean   @default(false)
  twoFactorSecret          String?
  backupCodes              Json[]
  emailVerificationToken   String?   @unique
  emailVerificationExpires DateTime?
  passwordResetToken       String?
  passwordResetExpires     DateTime?
  auditLogs                Json[]
  addresses                Address[]
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  Product                  Product[]
}

model Address {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  street    String
  landmark  String?
  city      String
  state     String
  country   String
  pincode   String
  isPrimary Boolean @default(false)
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  district  String?
}

model RevokedToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  expiresAt DateTime
}

model Product {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String
  price         Int
  sku           Int
  image         Json?
  tags          String?
  totalRating   Int?
  quantity      Int
  subCategoryId String
  subCategory   SubCategory @relation(fields: [subCategoryId], references: [id])
  sellerId      String
  seller        User        @relation(fields: [sellerId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
}

model Category {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          CategoryType
  subCategories SubCategory[]
}

model SubCategory {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  categoryId String
  category   Category  @relation(fields: [categoryId], references: [id])
  products   Product[]
}

enum Role {
  USER
  ADMIN
  DEV
  SELLER
  TESTER
}

enum CategoryType {
  ELECTRONICS
  FASHION
  HOME_APPLIANCES
  BOOKS
  TOYS
  GROCERIES
  BEAUTY
  SPORTS
  AUTOMOTIVE
  FURNITURE
  JEWELRY
  MUSIC
  OFFICE_SUPPLIES
  PET_SUPPLIES
  GARDEN
  HEALTH
  BABY
  VIDEO_GAMES
  MOVIES
  SOFTWARE
  ART
  CRAFTS
  INDUSTRIAL
  OUTDOORS
  TRAVEL
}
